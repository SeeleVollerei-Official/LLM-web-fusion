// 主页面组件
const HomePage = () => {
  const [userInfo, setUserInfo] = useState({
    avatar: '',
    username: '',
    balance: 0,
    monthlyIncome: 0,
    livingExpenses: 0,
    savingGoal: 0
  });

  const [monthlyStats, setMonthlyStats] = useState({
    totalExpense: 0,
    categories: [],
    savingProgress: 0
  });

  // 获取用户信息
  useEffect(() => {
    // TODO: 从API获取用户信息
  }, []);

  return (
    <div className="home-container">
      {/* 个人信息概况 */}
      <section className="user-profile">
        <div className="user-info">
          <img src={userInfo.avatar} alt="用户头像" />
          <h2>{userInfo.username}</h2>
          <div className="account-info">
            <p>账户余额: ¥{userInfo.balance}</p>
            <p>月收入: ¥{userInfo.monthlyIncome}</p>
            <p>生活费: ¥{userInfo.livingExpenses}</p>
          </div>
        </div>
        
        <div className="saving-progress">
          <h3>本月节约目标</h3>
          <ProgressBar 
            percent={monthlyStats.savingProgress} 
            goal={userInfo.savingGoal}
          />
        </div>
      </section>

      {/* 消费概况 */}
      <section className="expense-overview">
        <div className="monthly-total">
          <h3>当月消费总额</h3>
          <p>¥{monthlyStats.totalExpense}</p>
        </div>
        
        <div className="category-chart">
          <h3>消费分类占比</h3>
          <PieChart data={monthlyStats.categories} />
        </div>

        <div className="saving-tips">
          <h3>节约建议</h3>
          <SavingTips data={monthlyStats} />
        </div>
      </section>

      {/* 快捷操作 */}
      <section className="quick-actions">
        <Button onClick={() => navigate('/expense/add')}>
          快速录入消费
        </Button>
        <Button onClick={() => navigate('/expense/records')}>
          查看消费记录
        </Button>
        <Button onClick={() => navigate('/analysis')}>
          查看分析报告
        </Button>
        <Button onClick={() => navigate('/recommendations')}>
          查看兴趣推荐
        </Button>
      </section>

      {/* 个人设置 */}
      <section className="settings">
        <h3>个人设置</h3>
        <div className="settings-menu">
          <Link to="/profile/edit">个人资料编辑</Link>
          <Link to="/help">帮助与FAQ</Link>
        </div>
      </section>
    </div>
  );
};

// 消费录入页面组件
const ExpenseInputPage = () => {
  const [expenseForm, setExpenseForm] = useState({
    type: '',
    amount: 0,
    date: new Date(),
    note: ''
  });

  const handleManualSubmit = () => {
    // TODO: 提交表单数据
  };

  const handleImageUpload = (file) => {
    // TODO: 处理图片上传和OCR识别
  };

  const handleVoiceInput = () => {
    // TODO: 处理语音输入
  };

  return (
    <div className="expense-input-container">
      {/* 手动录入 */}
      <section className="manual-input">
        <h3>手动录入</h3>
        <form onSubmit={handleManualSubmit}>
          <Select 
            value={expenseForm.type}
            onChange={(value) => setExpenseForm({...expenseForm, type: value})}
            options={['食物', '娱乐', '购物']}
          />
          <Input 
            type="number"
            value={expenseForm.amount}
            onChange={(e) => setExpenseForm({...expenseForm, amount: e.target.value})}
            placeholder="消费金额"
          />
          <DatePicker 
            value={expenseForm.date}
            onChange={(date) => setExpenseForm({...expenseForm, date})}
          />
          <TextArea 
            value={expenseForm.note}
            onChange={(e) => setExpenseForm({...expenseForm, note: e.target.value})}
            placeholder="备注"
          />
          <Button type="submit">保存</Button>
        </form>
      </section>

      {/* 截图录入 */}
      <section className="image-input">
        <h3>截图录入</h3>
        <Upload onChange={handleImageUpload}>
          <Button>上传截图</Button>
        </Upload>
      </section>

      {/* 语音录入 */}
      <section className="voice-input">
        <h3>语音录入</h3>
        <Button onClick={handleVoiceInput}>开始语音录入</Button>
      </section>
    </div>
  );
};

// 消费分析页面组件
const AnalysisPage = () => {
  const [analysisData, setAnalysisData] = useState({
    savingProgress: 0,
    monthlyExpense: 0,
    trends: [],
    recommendations: []
  });

  useEffect(() => {
    // TODO: 获取分析数据
  }, []);

  return (
    <div className="analysis-container">
      {/* 节约目标进度 */}
      <section className="saving-progress">
        <h3>节约目标进度</h3>
        <ProgressBar percent={analysisData.savingProgress} />
        <p>已节约 {analysisData.savingProgress}%</p>
      </section>

      {/* 消费分析 */}
      <section className="expense-analysis">
        <h3>本月消费分析</h3>
        <div className="total-expense">
          <p>总支出: ¥{analysisData.monthlyExpense}</p>
        </div>
        <div className="trends">
          <LineChart data={analysisData.trends} />
        </div>
      </section>

      {/* 兴趣推荐 */}
      <section className="recommendations">
        <h3>兴趣推荐</h3>
        <div className="similar-users">
          {analysisData.recommendations.map(user => (
            <UserCard key={user.id} user={user} />
          ))}
        </div>
      </section>
    </div>
  );
};

export { HomePage, ExpenseInputPage, AnalysisPage };
